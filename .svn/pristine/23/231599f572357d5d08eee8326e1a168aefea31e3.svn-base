using Domain.Entity;
using Domain.ViewModel;
using FytMsys.Common;
using FytMsys.Helper;
using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;

namespace FytMsys.Web.Controllers
{
    /// <summary>
    /// 去看看管理
    /// </summary>
    public class GoLookController : Controller
    {
        #region 1、[去看看] 列表页 + Index()
        /// <summary>
        /// 列表页
        /// </summary>
        /// <returns></returns>
        public ActionResult Index(int orderinfo, int page)
        {
            int pageSize = 8;
            var date = DateTime.Now.ToShortDateString();
            var lq = from p in OperateSession.SetContext.lv_GoLook
                     orderby p.UpdateTime descending
                     select new
                     {
                         p.ID,
                         p.UserId,
                         p.tb_User.NickName,
                         p.tb_User.TrueName,
                         p.tb_User.HeadPic,
                         p.Title,
                         p.CoverImg,
                         p.ShowImg,
                         p.Rsum,
                         p.GoAddress,
                         p.ArriveTime,
                         p.Flags,
                         p.Hits,
                         p.Centents,
                         p.AddTime,
                         p.UpdateTime
                     };
            switch (orderinfo)
            {
                case 0: lq = lq.OrderByDescending(m => m.AddTime); break;
                case 1: lq = lq.OrderBy(m => m.AddTime); break;
                case 2: lq = lq.OrderByDescending(m => m.Hits); break;
                case 3: lq = lq.OrderBy(m => m.Hits); break;
            }
            lq = lq.Where(m => String.Compare(m.ArriveTime, date, StringComparison.Ordinal) >= 0);
            ViewBag.list = JsonConverter.JsonClass(lq.Skip(pageSize * (page - 1)).Take(pageSize).ToList());
            //分页控件
            ViewBag.pageModel = new PageHelper()
            {
                PageSize = pageSize,
                PageIndex = page,
                Rows = lq.Count(),
                Counts = Convert.ToInt32(Math.Ceiling((lq.Count() * 1.0) / pageSize)),
                Urls = "/golook/index/" + orderinfo + "-" + page
            };
            //网站信息
            var siteModel = WebSiteHelper.GetSite(1);
            //广告位
            var banner = OperateContext<tb_AdvList>.SetServer.GetList(m => m.ClassId == 6, m => m.Sort, false).Where(m => m.Status).FirstOrDefault();
            ViewBag.banner = banner;
            return View(siteModel);
        }
        #endregion

        #region 2、[去看看] 发布去看看信息 + Publish()
        /// <summary>
        /// 发布去看看信息
        /// </summary>
        /// <returns></returns>
        public ActionResult Publish()
        {
            if (!string.IsNullOrEmpty(UtilsHelper.GetCookie("FytUserId")))
            {
                ViewBag.userId = Convert.ToInt32(DESEncrypt.Decrypt(UtilsHelper.GetCookie("FytUserId")));
            }
            return View();
        }
        #endregion

        #region 3、[去看看] 发布去看看信息 + Publish()
        /// <summary>
        /// 发布去看看信息
        /// </summary>
        /// <returns></returns>
        [HttpPost]
        [ValidateAntiForgeryToken]
        [ValidateInput(false)]
        public ActionResult Publish(lv_GoLook model)
        {
            var jsonM = new JsonHelper.JsonAjaxModel() { Status = "y", Msg = "success" };
            try
            {
                //获取Cookie用户ID
                var userId = 0;
                if (!string.IsNullOrEmpty(UtilsHelper.GetCookie("FytUserId")))
                {
                    userId = Convert.ToInt32(DESEncrypt.Decrypt(UtilsHelper.GetCookie("FytUserId")));

                    model.ID = 0;
                    model.Number = UtilsHelper.GetRamCode();
                    model.UserId = userId;
                    model.IsSpecial = false;
                    model.AddTime = DateTime.Now;
                    model.UpdateTime = DateTime.Now;
                    var flag = FytRequest.GetFormString("flag");
                    if (flag == "group")
                    {
                        model.Flags = 1;
                    }
                    else
                    {
                        model.Flags = 0;
                    }
                    //保存去看看信息
                    OperateContext<lv_GoLook>.SetServer.Add(model);
                    //保存去看看参与记录
                    var go = new lv_GoLookOrder()
                    {
                        LookId = model.ID,
                        UserId = model.UserId,
                        AddTime = DateTime.Now
                    };
                    OperateContext<lv_GoLookOrder>.SetServer.Add(go);
                    #region 多张图片上传
                    var reslist = FytRequest.GetFormString("imlist").Split(new char[] { '|' }, StringSplitOptions.RemoveEmptyEntries);
                    var listModel = new List<tb_ImageLibrary>();
                    foreach (string s in reslist)
                    {
                        var u = FytRequest.GetFormString("file_name_" + s);
                        if (u != "")
                        {
                            listModel.Add(new tb_ImageLibrary()
                            {
                                ImgID = model.ID,
                                ImgType = 3,
                                ImgUrl = u,
                                ImgSmall = u,
                                IsCover = false
                            });
                        }
                    }
                    OperateContext<tb_ImageLibrary>.SetServer.AddEntity(listModel);
                    #endregion
                    jsonM.Msg = model.ID.ToString();
                }
                else
                {
                    jsonM.Status = "err";
                    jsonM.Msg = "您尚未登录,请先登录！";
                }
            }
            catch (Exception ex)
            {
                jsonM.Status = "err";
                jsonM.Msg = "修改数据发生错误！ 消息：" + ex.Message;
                LogHelper.WriteLog(typeof(GoLookController), ex);
            }
            return Json(jsonM);
        }
        #endregion

        #region 4、[去看看] 详情 + Detail(int id)
        /// <summary>
        /// 详情
        /// </summary>
        /// <returns></returns>
        public ActionResult Detail(int id)
        {
            //获取Cookie用户ID
            var userId = 0;
            if (!string.IsNullOrEmpty(UtilsHelper.GetCookie("FytUserId")))
            {
                userId = Convert.ToInt32(DESEncrypt.Decrypt(UtilsHelper.GetCookie("FytUserId")));
            }
            //获取去看看详情
            var model = OperateContext<lv_GoLook>.SetServer.GetModel(m => m.ID == id);
            //获取去看看图片列表
            var imglist = OperateContext<tb_ImageLibrary>.SetServer.GetList(
                PredicateBuilder.True<tb_ImageLibrary>().And(m => m.ImgID == id).And(m => m.ImgType == 3),
                m => m.IsCover, true);
            ViewBag.imglist = imglist.ToList();
            //获取去看看参与人列表
            var peoplelist = OperateContext<lv_GoLookOrder>.SetServer.GetList(m => m.LookId == id, m => m.AddTime, true);
            ViewBag.peoplelist = peoplelist.ToList();
            //获取去看看最新发布
            var newpublish = OperateContext<lv_GoLook>.SetServer.GetList(m => m.ID != id, m => m.UpdateTime, false);
            ViewBag.newpublish = newpublish.Take(5).ToList();
            //判断当前用户是否已参与
            var IsExist = 0;
            foreach (var item in peoplelist.ToList())
            {
                if (item.UserId == userId)
                {
                    IsExist = 1;
                }
            }
            ViewBag.IsExist = IsExist;
            //更新用户访问量
            model.Hits = model.Hits + 1;
            ViewBag.userId = userId;
            OperateContext<lv_GoLook>.SetServer.Update(model);
            return View(model);
        }
        #endregion

        #region 5、[去看看] 报名 + Join()
        /// <summary>
        /// 报名
        /// </summary>
        /// <returns></returns>
        [ValidateAntiForgeryToken]
        [HttpPost]
        public ActionResult Join()
        {
            var jsonM = new JsonHelper.JsonAjaxModel() { Status = "y", Msg = "报名成功！" };
            try
            {
                var id = FytRequest.GetFormInt("id");//去看看ID
                //获取Cookie用户ID
                var userId = 0;
                if (!string.IsNullOrEmpty(UtilsHelper.GetCookie("FytUserId")))
                {
                    userId = Convert.ToInt32(DESEncrypt.Decrypt(UtilsHelper.GetCookie("FytUserId")));

                    //获取去看看所需人数及现参与人数并对比
                    var glo = OperateContext<lv_GoLook>.SetServer.GetModel(m => m.ID == id);
                    var joinnum = OperateContext<lv_GoLookOrder>.SetServer.Count(m => m.LookId == id);
                    if (joinnum < int.Parse(glo.Rsum))
                    {
                        var IsExist = OperateContext<lv_GoLookOrder>.SetServer.Exist(PredicateBuilder.True<lv_GoLookOrder>().And(m => m.LookId == id).And(m => m.UserId == userId));
                        if (!IsExist)
                        {
                            //录入去看看参与记录
                            var model = new lv_GoLookOrder()
                            {
                                LookId = id,
                                UserId = userId,
                                AddTime = DateTime.Now
                            };
                            OperateContext<lv_GoLookOrder>.SetServer.Add(model);
                        }
                        else
                        {
                            jsonM.Status = "n";
                            jsonM.Msg = "抱歉，您已报名!";
                        }
                    }
                    else
                    {
                        jsonM.Status = "n";
                        jsonM.Msg = "抱歉，参与人数已满!";
                    }
                }
                else
                {
                    jsonM.Status = "warning";
                    jsonM.Msg = "您尚未登录,请先登录！";
                }
            }
            catch (Exception ex)
            {
                jsonM.Status = "err";
                jsonM.Msg = "发生错误！ 消息：" + ex.Message;
                LogHelper.WriteLog(typeof(GoLookController), ex);
            }
            return Json(jsonM);
        }
        #endregion

        #region 6、[公用] 发送信息 + SendUserMsg()
        /// <summary>
        /// 发送信息
        /// </summary>
        /// <returns></returns>
        [ValidateAntiForgeryToken]
        [HttpPost]
        public ActionResult SendUserMsg()
        {
            var jsonM = new JsonHelper.JsonAjaxModel() { Status = "y", Msg = "success" };
            try
            {
                //获取Cookie用户ID
                var userId = 0;
                if (!string.IsNullOrEmpty(UtilsHelper.GetCookie("FytUserId")))
                {
                    userId = Convert.ToInt32(DESEncrypt.Decrypt(UtilsHelper.GetCookie("FytUserId")));
                    var centents = FytRequest.GetFormString("centents");//信息详情
                    //发送信息
                    var model = new lv_Message()
                    {
                        GoUserId = userId,
                        SendUserId = userId,
                        IsRead = false,
                        Centents = centents,
                        AddTime = DateTime.Now
                    };
                    OperateContext<lv_Message>.SetServer.Add(model);
                }
                else
                {
                    jsonM.Status = "warning";
                    jsonM.Msg = "您尚未登录,请先登录！";
                }
            }
            catch (Exception ex)
            {
                jsonM.Status = "err";
                jsonM.Msg = "发生错误！ 消息：" + ex.Message;
                LogHelper.WriteLog(typeof(GoLookController), ex);
            }
            return Json(jsonM);
        }
        #endregion
    }
}